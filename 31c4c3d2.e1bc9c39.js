(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{135:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return m}));var o=n(0),r=n.n(o);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=r.a.createContext({}),u=function(e){var t=r.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=u(e.components);return r.a.createElement(l.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=r.a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),p=u(n),d=o,m=p["".concat(i,".").concat(d)]||p[d]||h[d]||a;return n?r.a.createElement(m,s(s({ref:t},l),{},{components:n})):r.a.createElement(m,s({ref:t},l))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var l=2;l<a;l++)i[l]=n[l];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},81:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return s})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return u}));var o=n(3),r=n(7),a=(n(0),n(135)),i={id:"production_steps",title:"Details to complete production checklist"},s={unversionedId:"production_steps",id:"production_steps",isDocsHomePage:!1,title:"Details to complete production checklist",description:"Deployment",source:"@site/docs/production_steps.md",slug:"/production_steps",permalink:"/Infrastructure-Playbook/production_steps",editUrl:"https://github.com/LBHackney-IT/Infrastructure-Playbook/edit/master/docs/production_steps.md",version:"current"},c=[{value:"Deployment",id:"deployment",children:[]}],l={toc:c};function u(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(a.b)("wrapper",Object(o.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"deployment"},"Deployment"),Object(a.b)("p",null,"Once your PR has been merged into master branch, head to the correct view in CircleCI - this is often easiest via clicking the check (or cross) symbol next to your merged PR in the GitHub repo\u2019s list of master branch commits - use the \u201cDetails\u201d links to go to the relevant CircleCI view"),Object(a.b)("p",null,"Once in CircleCI, make sure you\u2019re viewing the entire workflow for the build by checking the submenu on the left, and making sure the view URL includes workflows in its path i.e.: ",Object(a.b)("a",{parentName:"p",href:"https://app.circleci.com/pipelines/github/LBHackney-IT/person-api"},"https://app.circleci.com/pipelines/github/LBHackney-IT/person-api"),"\nBy navigating to the correct workflow, you can monitor the deployment of the application and manually permit the \u201cDeploy to Staging\u201d and \u201cDeploy to Production\u201d jobs if the prerequisite jobs (e.g. automated test runs, Terraform apply commands) succeed - or, if any jobs fail, you can click through to the job to debug the issue(s)"),Object(a.b)("p",null,"Naming Conventions\nTo review the endpoint URLs, check the controller(s) within your API project\u2019s codebase for route statements like:"),Object(a.b)("p",null,'[Route("api/v1/persons")]',"\nYou\u2019ll also want to check any expected query parameters, which you should find in one or more files with Param in the filename (e.g. ResidentQueryParam.cs)\nIf any of these route statements or query parameters seem incorrect in their names, including the casing, refer to the relevant Swagger documentation for the API and update the codebase (or the Swagger doc) as required\nIf any route statements have been updated, be sure to double-check that they work and provide the expected responses, once the changes have been deployed to production, using the steps detailed in the \u2018Responses\u2019 section of this document\nThere are also naming conventions to follow API Playbook link for responses"),Object(a.b)("p",null,"Responses\nTo test the API\u2019s endpoints:\nVisit the API Gateway dashboard within the correct region (e.g. ",Object(a.b)("a",{parentName:"p",href:"https://eu-west-2.console.aws.amazon.com/apigateway/main/apis"},"https://eu-west-2.console.aws.amazon.com/apigateway/main/apis"),")\nSelect the API you\u2019d like to test\nClick the \u201cAny\u201d resource option and then the \u201cTest\u201d button:"),Object(a.b)("p",null,"From the next view, you can choose a request method (such as GET), enter the path, set \u201cstage variables\u201d (like environment variables) and any request parameters, and then scroll down to click the \u201cTest\u201d button to see what the API\u2019s response to your request is\nIf the response is an error, you should be able to dig into the stack trace shown to begin debugging\nMake test requests of each of the API\u2019s endpoints, looking for potential issues with:\nResponse structures\nDo they match what you expect/the Swagger doc?\nAre there any unexpected duplications?\nHave enums been transformed correctly into strings?\nDo all possible combinations of search parameters work as expected?\nDo all possible variations of the limit and cursor parameters work as expected?\nResponse times\nAre there requests that might take longer than the default lambda timeout of 6s to complete, e.g. searching all records with a high limit parameter?\nTry to identify what kind of requests might trigger one or more long-running database queries - and see below for instructions for enabling slow query logging on any RDS database instances"),Object(a.b)("p",null,"Configuration and security\nMake sure slow query logging is enabled on any relevant RDS database instances by ","[steps to check or add to Terraform config?][see related Production testing checklist to complete this section]"),Object(a.b)("p",null,"Errors\n","[see related Production testing checklist to complete this section]"))}u.isMDXComponent=!0}}]);